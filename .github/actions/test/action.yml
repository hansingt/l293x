name: Test
description: Build and test the Rust application

inputs:
  rust-version:
    description: Rust version to use
    default: stable
    required: false
  coverage:
    description: Collect code coverage data
    default: 'false'
    required: false

outputs:
  codecov-report:
    description: The path to the CodeCov coverage report
    value: ${{ steps.tests.outputs.report-path }}

runs:
  using: composite
  steps:
    - name: Setup rust toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ inputs.rust-version }}
        components: llvm-tools
      if: inputs.coverage == 'true'
    - name: Setup rust toolchain
      uses: dtolnay/rust-toolchain@master
      with:
        toolchain: ${{ inputs.rust-version }}
      if: inputs.coverage != 'true'
    - name: Install cargo-llvm-cov
      uses: taiki-e/install-action@cargo-llvm-cov
      if: inputs.coverage == 'true'
    - name: Install cargo-nextest
      uses: taiki-e/install-action@nextest
    - name: Test
      id: tests
      env:
        REPORT_PATH: coverage.xml
      shell: bash
      run: |
        cargo llvm-cov nextest --verbose --no-fail-fast --codecov --output-path="${REPORT_PATH}"
        echo "report-path=${REPORT_PATH}" >> "$GITHUB_OUTPUT"
      if: inputs.coverage == 'true'
    - name: Test
      shell: bash
      run: |
        cargo nextest run --verbose --no-fail-fast
      if: inputs.coverage != 'true'
